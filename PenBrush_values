brush( 32bit color,  5bit BrushStyle  )
pen( brush, 8bit pen width, 3bit PenStyle, 2bit PenCapStyle, 2bit PenJoinStyle)

data1 bits->
[1:5] BrushStyle, [6:8] PenStyle, [9:16] pen Width
data2 bits->
[1:2] PenCapStyle, [3:4] PenjoinStyle

Qt::BrushStyle
Qt::NoBrush					0	No brush pattern.
Qt::SolidPattern			1	Uniform color.
Qt::Dense1Pattern			2	Extremely dense brush pattern.
Qt::Dense2Pattern			3	Very dense brush pattern.
Qt::Dense3Pattern			4	Somewhat dense brush pattern.
Qt::Dense4Pattern			5	Half dense brush pattern.
Qt::Dense5Pattern			6	Somewhat sparse brush pattern.
Qt::Dense6Pattern			7	Very sparse brush pattern.
Qt::Dense7Pattern			8	Extremely sparse brush pattern.
Qt::HorPattern				9	Horizontal lines.
Qt::VerPattern				10	Vertical lines.
Qt::CrossPattern			11	Crossing horizontal and vertical lines.
Qt::BDiagPattern			12	Backward diagonal lines.
Qt::FDiagPattern			13	Forward diagonal lines.
Qt::DiagCrossPattern		14	Crossing diagonal lines.
Qt::LinearGradientPattern	15	Linear gradient (set using a dedicated QBrush constructor).
Qt::ConicalGradientPattern	17	Conical gradient (set using a dedicated QBrush constructor).
Qt::RadialGradientPattern	16	Radial gradient (set using a dedicated QBrush constructor).
Qt::TexturePattern			24	Custom pattern (see QBrush::setTexture()).

Qt::PenStyle
Qt::NoPen					0	no line at all. For example, QPainter::drawRect() fills but does not draw any boundary line.
Qt::SolidLine				1	A plain line.
Qt::DashLine				2	Dashes separated by a few pixels.
Qt::DotLine					3	Dots separated by a few pixels.
Qt::DashDotLine				4	Alternate dots and dashes.
Qt::DashDotDotLine			5	One dash, two dots, one dash, two dots.
Qt::CustomDashLine			6	A custom pattern defined using QPainterPathStroker::setDashPattern().

Qt::PenCapStyle
Qt::FlatCap					0x00	a square line end that does not cover the end point of the line.
Qt::SquareCap				0x10	a square line end that covers the end point and extends beyond it by half the line width.
Qt::RoundCap				0x20	a rounded line end.

Qt::PenJoinStyle
Qt::MiterJoin				0x00	The outer edges of the lines are extended to meet at an angle, and this area is filled.
Qt::BevelJoin				0x40	The triangular notch between the two lines is filled.
Qt::RoundJoin				0x80	A circular arc between the two lines is filled.
Qt::SvgMiterJoin			0x100	A miter join corresponding to the definition of a miter join in the SVG 1.2 Tiny specification.