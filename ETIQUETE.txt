This file goes over the etiquete to work on this project:

1) Each feature added or change made to the program shall have a new commit with git
2) Each commit should have a CHANGELOG.txt file describing changes made / features added
3) If working alone (not on a group call with everyone) work on features / changes on a seperate branch!
4) We need to decide together if a branch shall be added into the main one

overview of git structure:

git allows us to create a tree like structure were we save copies of our project files as we develop them.

the master branch contains the main release of the program, with the appropiate files.
each time we add a feature to the program, we make a commit to a branch, the commit will make a copy of the current files in your working directory and save them on the branch as a commit.

so as the program develops we should have several commits, each commit containing a copy of the project files/code when we made the commit.
If we so which, we can go back to a commit and look at the code when we made the commit.
So if we select a commit, the files of that commit should now be the files in your working directory.

The master branch, as previously mencioned contains the commit with the main release of the project files, as the head commit, but we can create side branches, with their own commits.
We can develop code in another branch, branched from a commit in the master branch, and if we decide to then implement that code into the master branch, we can merge the branch.

And of course we can have branches on top of branches on top of branches... but that would be a big project.
